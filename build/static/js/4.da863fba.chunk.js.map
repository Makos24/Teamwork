{"version":3,"sources":["components/employee/Comments.js","components/employee/Post.js","components/employee/Posts.js","components/employee/Feed.js"],"names":["RESET_VALUES","id","body","name","Comments","props","state","show","comments","comment","toggle","bind","onChange","addComment","this","getData","post","then","result","responseJson","status","console","log","data","setState","currentState","Object","keys","map","cid","e","target","value","Date","getTime","store","get","PostDataAuth","prevState","assign","rows","getComments","forEach","push","key","className","onClick","React","Component","Post","destroy","onDestroy","title","search","src","alt","Posts","handleDestroy","sort","column","direction","posts","pid","getPosts","Feed","to"],"mappings":"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","file":"static/js/4.da863fba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { getData, PostDataAuth } from \"../../service\";\r\nimport store from \"store\";\r\n\r\nconst RESET_VALUES = {\r\n  id: \"\",\r\n  body: \"\",\r\n  name: \"\"\r\n};\r\n\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      comments: [],\r\n      comment: \"\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.addComment = this.addComment.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    if (!this.state.show) {\r\n      getData(\"/articles/\" + this.props.post.id + \"/comments\").then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          console.log(responseJson.data);\r\n          this.setState({ comments: responseJson.data });\r\n          //   this.setState({ redirectToReferrer: true });\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState(currentState => ({ show: !currentState.show }));\r\n  }\r\n\r\n  getComments() {\r\n    if (this.state.comments) {\r\n      let commentsAsArray = Object.keys(this.state.comments).map(\r\n        cid => this.state.comments[cid]\r\n      );\r\n      return commentsAsArray;\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  addComment() {\r\n    if (this.state.comment) {\r\n      let comment = {\r\n        id: new Date().getTime(),\r\n        body: this.state.comment,\r\n        name: store.get(\"twk-userData\").name\r\n      };\r\n      PostDataAuth(\r\n        \"/articles/\" + this.props.post.id + \"/comments\",\r\n        comment\r\n      ).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          console.log(responseJson.data);\r\n          this.setState(prevState => {\r\n            let comments = prevState.comments;\r\n            comments[comment.id] = comment;\r\n            return { comments };\r\n          });\r\n          this.setState({\r\n            comment: Object.assign({}, RESET_VALUES)\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var rows = [];\r\n    if (this.getComments()) {\r\n      this.getComments().forEach(comment => {\r\n        rows.push(\r\n          <div key={comment.id} className=\"shadow-sm p-2 m-2 col-md-10\">\r\n            <h6>{comment.name}</h6>\r\n            {comment.body}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggle} className=\"btn btn-primary\">\r\n          {this.state.show ? \"Hide\" : \"Show\"} Comments\r\n        </button>\r\n        <div className=\"col-md-11 mt-3\">\r\n          {this.state.show && (\r\n            <div>\r\n              <div className=\"row\">{rows}</div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                  <textarea\r\n                    name=\"comment\"\r\n                    onChange={this.onChange}\r\n                    className=\"form-control\"\r\n                    value={this.state.comment.body}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <button className=\"btn btn-primary\" onClick={this.addComment}>\r\n                    Add Comment\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comments from \"./Comments\";\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.destroy = this.destroy.bind(this);\r\n  }\r\n  destroy() {\r\n    this.props.onDestroy(this.props.post.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"shadow-sm p-3 m-2\">{this.props.post.name}</h4>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n            {this.props.post.body.search(\"http://res.cloudinary.com\") ? (\r\n              <p className=\"card-text\">{this.props.post.body}</p>\r\n            ) : (\r\n              <img\r\n                className=\"img-fluid img-thumbnail\"\r\n                src={this.props.post.body}\r\n                alt={this.props.post.title}\r\n              />\r\n            )}\r\n\r\n            <div className=\"\">\r\n              <Comments\r\n                key={this.props.post.id}\r\n                post={this.props.post}\r\n              ></Comments>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nclass Posts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDestroy = this.handleDestroy.bind(this);\r\n\r\n    this.state = {\r\n      sort: {\r\n        column: \"name\",\r\n        direction: \"desc\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleDestroy(id) {\r\n    this.props.onDestroy(id);\r\n  }\r\n\r\n  getPosts() {\r\n    let postsAsArray = Object.keys(this.props.posts).map(\r\n      pid => this.props.posts[pid]\r\n    );\r\n    return postsAsArray;\r\n  }\r\n\r\n  render() {\r\n    var rows = [];\r\n    this.getPosts().forEach(post => {\r\n      rows.push(\r\n        <Post post={post} key={post.id} onDestroy={this.handleDestroy}></Post>\r\n      );\r\n    });\r\n\r\n    return <div className=\"row\">{rows}</div>;\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n// import Filters from \"../admin/Filters\";\r\nimport store from \"store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Posts from \"./Posts\";\r\nimport { getData } from \"../../service\";\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: \"\"\r\n    };\r\n\r\n    // this.handleFilter = this.handleFilter.bind(this);\r\n    // this.handleDestroy = this.handleDestroy.bind(this);\r\n    // this.saveUser = this.saveUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getData(\"/articles\").then(result => {\r\n      let responseJson = result;\r\n      if (responseJson.status === \"success\") {\r\n        console.log(responseJson.data);\r\n        this.setState({ posts: responseJson.data });\r\n        //   this.setState({ redirectToReferrer: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  //   saveUser(user) {\r\n  //     if (!user.id) {\r\n  //       user.id = new Date().getTime();\r\n  //     }\r\n  //     this.setState(prevState => {\r\n  //       let users = prevState.users;\r\n  //       users[user.id] = user;\r\n  //       return { users };\r\n  //     });\r\n  //   }\r\n  //   handleDestroy(productId) {\r\n  //     this.setState(prevState => {\r\n  //       let users = prevState.users;\r\n  //       delete users[productId];\r\n  //       return { users };\r\n  //     });\r\n  //   }\r\n  render() {\r\n    if (!store.get(\"twk-userData\")) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <div className=\"App container mt-5 mb-5\">\r\n        <div className=\"mt-5 mb-5\"></div>\r\n        <div className=\"container\">\r\n          <h1>Recent Posts</h1>\r\n          <Posts\r\n            posts={this.state.posts}\r\n            onDestroy={this.handleDestroy}\r\n          ></Posts>\r\n          {/* <ProductForm onSave={this.saveProduct}></ProductForm> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n"],"sourceRoot":""}