{"version":3,"sources":["components/employee/Comments.js","components/employee/Post.js","components/employee/Posts.js","components/employee/Gifs.js"],"names":["RESET_VALUES","id","body","name","Comments","props","state","show","comments","comment","toggle","bind","onChange","addComment","this","post","search","getData","then","result","responseJson","status","console","log","data","setState","currentState","Object","keys","map","cid","e","target","value","Date","getTime","store","get","PostDataAuth","prevState","assign","rows","getComments","forEach","push","key","className","onClick","React","Component","Post","destroy","window","confirm","Delete","onDestroy","title","src","alt","Posts","handleDestroy","sort","column","direction","posts","pid","getPosts","Math","random","Gifs","to"],"mappings":"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","file":"static/js/5.c6ae8a7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { getData, PostDataAuth } from \"../../service\";\r\nimport store from \"store\";\r\n\r\nconst RESET_VALUES = {\r\n  id: \"\",\r\n  body: \"\",\r\n  name: \"\"\r\n};\r\n\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      comments: [],\r\n      comment: \"\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.addComment = this.addComment.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    if (!this.state.show) {\r\n      if (this.props.post.body.search(\"http://res.cloudinary.com\")) {\r\n        getData(\"/gifs/\" + this.props.post.id + \"/comments\").then(result => {\r\n          let responseJson = result;\r\n          if (responseJson.status === \"success\") {\r\n            console.log(responseJson.data);\r\n            this.setState({ comments: responseJson.data });\r\n            //   this.setState({ redirectToReferrer: true });\r\n          }\r\n        });\r\n      } else {\r\n        getData(\"/articles/\" + this.props.post.id + \"/comments\").then(\r\n          result => {\r\n            let responseJson = result;\r\n            if (responseJson.status === \"success\") {\r\n              console.log(responseJson.data);\r\n              this.setState({ comments: responseJson.data });\r\n              //   this.setState({ redirectToReferrer: true });\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    this.setState(currentState => ({ show: !currentState.show }));\r\n  }\r\n\r\n  getComments() {\r\n    if (this.state.comments) {\r\n      let commentsAsArray = Object.keys(this.state.comments).map(\r\n        cid => this.state.comments[cid]\r\n      );\r\n      return commentsAsArray;\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  addComment() {\r\n    if (this.state.comment) {\r\n      let comment = {\r\n        id: new Date().getTime(),\r\n        body: this.state.comment,\r\n        name: store.get(\"twk-userData\").name\r\n      };\r\n      PostDataAuth(\r\n        \"/articles/\" + this.props.post.id + \"/comments\",\r\n        comment\r\n      ).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          console.log(responseJson.data);\r\n          this.setState(prevState => {\r\n            let comments = prevState.comments;\r\n            comments[comment.id] = comment;\r\n            return { comments };\r\n          });\r\n          this.setState({\r\n            comment: Object.assign({}, RESET_VALUES)\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var rows = [];\r\n    if (this.getComments()) {\r\n      this.getComments().forEach(comment => {\r\n        rows.push(\r\n          <div key={comment.id} className=\"shadow-sm p-2 m-2 col-md-10\">\r\n            <h6>{comment.name}</h6>\r\n            {comment.body}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggle} className=\"btn btn-primary\">\r\n          {this.state.show ? \"Hide\" : \"Show\"} Comments\r\n        </button>\r\n        <div className=\"col-md-11 mt-3\">\r\n          {this.state.show && (\r\n            <div>\r\n              <div className=\"row\">{rows}</div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                  <textarea\r\n                    name=\"comment\"\r\n                    onChange={this.onChange}\r\n                    className=\"form-control\"\r\n                    value={this.state.comment.body}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <button className=\"btn btn-primary\" onClick={this.addComment}>\r\n                    Add Comment\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comments from \"./Comments\";\r\nimport { Delete } from \"../../service\";\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.destroy = this.destroy.bind(this);\r\n  }\r\n  destroy() {\r\n    if (window.confirm(\"Are you sure you want to delete this article?\")) {\r\n      Delete(\"/articles/\" + this.props.post.id).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          //console.log(responseJson.data);\r\n          this.props.onDestroy(this.props.post.id);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-10\">\r\n        <div className=\"card\">\r\n          <div className=\"d-flex\">\r\n            <h4 className=\"shadow-sm m-2 flex-grow-1\">\r\n              {this.props.post.name}\r\n            </h4>{\" \"}\r\n            <button className=\"btn btn-sm btn-info\">Edit</button>\r\n            <button className=\"btn btn-sm btn-danger\" onClick={this.destroy}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n            {this.props.post.body.search(\"http://res.cloudinary.com\") ? (\r\n              <p className=\"card-text\">{this.props.post.body}</p>\r\n            ) : (\r\n              <img\r\n                className=\"img-fluid img-thumbnail\"\r\n                src={this.props.post.body}\r\n                alt={this.props.post.title}\r\n              />\r\n            )}\r\n\r\n            <div className=\"\">\r\n              <Comments\r\n                key={this.props.post.id}\r\n                post={this.props.post}\r\n              ></Comments>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nclass Posts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDestroy = this.handleDestroy.bind(this);\r\n\r\n    this.state = {\r\n      sort: {\r\n        column: \"name\",\r\n        direction: \"desc\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleDestroy(id) {\r\n    this.props.onDestroy(id);\r\n  }\r\n\r\n  getPosts() {\r\n    let postsAsArray = Object.keys(this.props.posts).map(\r\n      pid => this.props.posts[pid]\r\n    );\r\n    return postsAsArray;\r\n  }\r\n\r\n  render() {\r\n    var rows = [];\r\n    this.getPosts().forEach(post => {\r\n      rows.push(\r\n        <Post\r\n          post={post}\r\n          key={post.id * Math.random()}\r\n          onDestroy={this.handleDestroy}\r\n        ></Post>\r\n      );\r\n    });\r\n\r\n    return <div className=\"row\">{rows}</div>;\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n// import Filters from \"../admin/Filters\";\r\nimport store from \"store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Posts from \"./Posts\";\r\nimport { getData } from \"../../service\";\r\n\r\nclass Gifs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: \"\"\r\n    };\r\n\r\n    // this.handleFilter = this.handleFilter.bind(this);\r\n    // this.handleDestroy = this.handleDestroy.bind(this);\r\n    // this.saveUser = this.saveUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getData(\"/gifs\").then(result => {\r\n      let responseJson = result;\r\n      if (responseJson.status === \"success\") {\r\n        console.log(responseJson.data);\r\n        this.setState({ posts: responseJson.data });\r\n        //   this.setState({ redirectToReferrer: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  //   saveUser(user) {\r\n  //     if (!user.id) {\r\n  //       user.id = new Date().getTime();\r\n  //     }\r\n  //     this.setState(prevState => {\r\n  //       let users = prevState.users;\r\n  //       users[user.id] = user;\r\n  //       return { users };\r\n  //     });\r\n  //   }\r\n  //   handleDestroy(productId) {\r\n  //     this.setState(prevState => {\r\n  //       let users = prevState.users;\r\n  //       delete users[productId];\r\n  //       return { users };\r\n  //     });\r\n  //   }\r\n  render() {\r\n    if (!store.get(\"twk-userData\")) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <div className=\"App container mt-5 mb-5\">\r\n        <div className=\"mt-5 mb-5\"></div>\r\n        <div className=\"container\">\r\n          <h1>Recent Gifs</h1>\r\n          <Posts\r\n            posts={this.state.posts}\r\n            onDestroy={this.handleDestroy}\r\n          ></Posts>\r\n          {/* <ProductForm onSave={this.saveProduct}></ProductForm> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gifs;\r\n"],"sourceRoot":""}