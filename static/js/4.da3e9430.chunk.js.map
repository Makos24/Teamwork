{"version":3,"sources":["components/employee/Comments.js","components/employee/Post.js","components/employee/Posts.js","components/employee/CreatePost.js","components/employee/CreateGif.js","components/employee/Feed.js"],"names":["RESET_VALUES","id","body","name","Comments","props","state","show","comments","comment","toggle","bind","onChange","addComment","this","post","search","getData","then","result","responseJson","status","console","log","data","setState","currentState","Object","keys","map","cid","e","target","value","Date","getTime","store","get","PostDataAuth","prevState","assign","rows","getComments","forEach","push","key","className","onClick","React","Component","Post","destroy","window","confirm","Delete","onDestroy","title","src","alt","Posts","handleDestroy","sort","column","direction","posts","pid","getPosts","Math","random","category_id","CreatePost","handleChange","handleSave","article","errors","onSave","type","GreateGif","handleChanges","image","gif","files","preventDefault","FormData","append","alert","Feed","saveArticle","postId","CreateGif","to"],"mappings":"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","file":"static/js/4.da3e9430.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { getData, PostDataAuth } from \"../../service\";\r\nimport store from \"store\";\r\n\r\nconst RESET_VALUES = {\r\n  id: \"\",\r\n  body: \"\",\r\n  name: \"\"\r\n};\r\n\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      comments: [],\r\n      comment: \"\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.addComment = this.addComment.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    if (!this.state.show) {\r\n      if (this.props.post.body.search(\"http://res.cloudinary.com\")) {\r\n        getData(\"/gifs/\" + this.props.post.id + \"/comments\").then(result => {\r\n          let responseJson = result;\r\n          if (responseJson.status === \"success\") {\r\n            console.log(responseJson.data);\r\n            this.setState({ comments: responseJson.data });\r\n            //   this.setState({ redirectToReferrer: true });\r\n          }\r\n        });\r\n      } else {\r\n        getData(\"/articles/\" + this.props.post.id + \"/comments\").then(\r\n          result => {\r\n            let responseJson = result;\r\n            if (responseJson.status === \"success\") {\r\n              console.log(responseJson.data);\r\n              this.setState({ comments: responseJson.data });\r\n              //   this.setState({ redirectToReferrer: true });\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    this.setState(currentState => ({ show: !currentState.show }));\r\n  }\r\n\r\n  getComments() {\r\n    if (this.state.comments) {\r\n      let commentsAsArray = Object.keys(this.state.comments).map(\r\n        cid => this.state.comments[cid]\r\n      );\r\n      return commentsAsArray;\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  addComment() {\r\n    if (this.state.comment) {\r\n      let comment = {\r\n        id: new Date().getTime(),\r\n        body: this.state.comment,\r\n        name: store.get(\"twk-userData\").name\r\n      };\r\n      PostDataAuth(\r\n        \"/articles/\" + this.props.post.id + \"/comments\",\r\n        comment\r\n      ).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          console.log(responseJson.data);\r\n          this.setState(prevState => {\r\n            let comments = prevState.comments;\r\n            comments[comment.id] = comment;\r\n            return { comments };\r\n          });\r\n          this.setState({\r\n            comment: Object.assign({}, RESET_VALUES)\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var rows = [];\r\n    if (this.getComments()) {\r\n      this.getComments().forEach(comment => {\r\n        rows.push(\r\n          <div key={comment.id} className=\"shadow-sm p-2 m-2 col-md-10\">\r\n            <h6>{comment.name}</h6>\r\n            {comment.body}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggle} className=\"btn btn-primary\">\r\n          {this.state.show ? \"Hide\" : \"Show\"} Comments\r\n        </button>\r\n        <div className=\"col-md-11 mt-3\">\r\n          {this.state.show && (\r\n            <div>\r\n              <div className=\"row\">{rows}</div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                  <textarea\r\n                    name=\"comment\"\r\n                    onChange={this.onChange}\r\n                    className=\"form-control\"\r\n                    value={this.state.comment.body}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <button className=\"btn btn-primary\" onClick={this.addComment}>\r\n                    Add Comment\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Comments from \"./Comments\";\r\nimport { Delete } from \"../../service\";\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.destroy = this.destroy.bind(this);\r\n  }\r\n  destroy() {\r\n    if (window.confirm(\"Are you sure you want to delete this article?\")) {\r\n      Delete(\"/articles/\" + this.props.post.id).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          //console.log(responseJson.data);\r\n          this.props.onDestroy(this.props.post.id);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-10\">\r\n        <div className=\"card\">\r\n          <div className=\"d-flex\">\r\n            <h4 className=\"shadow-sm m-2 flex-grow-1\">\r\n              {this.props.post.name}\r\n            </h4>{\" \"}\r\n            <button className=\"btn btn-sm btn-info\">Edit</button>\r\n            <button className=\"btn btn-sm btn-danger\" onClick={this.destroy}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n            {this.props.post.body.search(\"http://res.cloudinary.com\") ? (\r\n              <p className=\"card-text\">{this.props.post.body}</p>\r\n            ) : (\r\n              <img\r\n                className=\"img-fluid img-thumbnail\"\r\n                src={this.props.post.body}\r\n                alt={this.props.post.title}\r\n              />\r\n            )}\r\n\r\n            <div className=\"\">\r\n              <Comments\r\n                key={this.props.post.id}\r\n                post={this.props.post}\r\n              ></Comments>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nclass Posts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDestroy = this.handleDestroy.bind(this);\r\n\r\n    this.state = {\r\n      sort: {\r\n        column: \"name\",\r\n        direction: \"desc\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleDestroy(id) {\r\n    this.props.onDestroy(id);\r\n  }\r\n\r\n  getPosts() {\r\n    let postsAsArray = Object.keys(this.props.posts).map(\r\n      pid => this.props.posts[pid]\r\n    );\r\n    return postsAsArray;\r\n  }\r\n\r\n  render() {\r\n    var rows = [];\r\n    this.getPosts().forEach(post => {\r\n      rows.push(\r\n        <Post\r\n          post={post}\r\n          key={post.id * Math.random()}\r\n          onDestroy={this.handleDestroy}\r\n        ></Post>\r\n      );\r\n    });\r\n\r\n    return <div className=\"row\">{rows}</div>;\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { PostDataAuth } from \"../../service\";\r\nimport store from \"store\";\r\n\r\nconst RESET_VALUES = {\r\n  category_id: \"\",\r\n  title: \"\",\r\n  body: \"\",\r\n  name: \"\"\r\n};\r\n\r\nclass CreatePost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      show: false,\r\n      article: Object.assign({}, RESET_VALUES),\r\n      errors: {}\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState(currentState => ({ show: !currentState.show }));\r\n  }\r\n  handleChange(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState(prevState => {\r\n      prevState.article[name] = value;\r\n      return { article: prevState.article };\r\n    });\r\n  }\r\n  handleSave() {\r\n    if (this.state.article) {\r\n      let article = {\r\n        title: this.state.article.title,\r\n        body: this.state.article.body,\r\n        category_id: 1\r\n      };\r\n      PostDataAuth(\"/articles/\", article).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          console.log(responseJson.data);\r\n          this.props.onSave(this.state.article);\r\n          this.setState({\r\n            article: Object.assign({}, RESET_VALUES)\r\n          });\r\n          this.toggle();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggle} className=\"btn btn-primary\">\r\n          {this.state.show ? \"Close Create Post\" : \"Create Post\"}\r\n        </button>\r\n        <div className=\"col-md-11 mt-3\">\r\n          {this.state.show && (\r\n            <form className=\"form-vertical col-md-8\">\r\n              <h3>Create New Article</h3>\r\n              <div className=\"form-group\">\r\n                <label className=\"control-label\">Title</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  className=\"form-control\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.article.title}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Body</label>\r\n\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"body\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.article.body}\r\n                ></textarea>\r\n                <input type=\"hidden\" value=\"1\" name=\"category_id\" />\r\n              </div>\r\n\r\n              <input\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                value=\"Save\"\r\n                onClick={this.handleSave}\r\n              />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport { PostDataAuth } from \"../../service\";\r\nimport store from \"store\";\r\n\r\nconst RESET_VALUES = {\r\n  title: \"\"\r\n};\r\n\r\nclass GreateGif extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      show: false,\r\n      image: null,\r\n      gif: Object.assign({}, RESET_VALUES),\r\n      errors: {}\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState(currentState => ({ show: !currentState.show }));\r\n  }\r\n  handleChanges(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState(prevState => {\r\n      prevState.gif[name] = value;\r\n      return { gif: prevState.gif };\r\n    });\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      image: e.target.files[0]\r\n    });\r\n  }\r\n  handleSave(e) {\r\n    e.preventDefault();\r\n    if (this.state.gif.title !== \"\" && this.state.image) {\r\n      let data = new FormData();\r\n      data.append(\"image\", this.state.image, this.state.image.name);\r\n      data.append(\"title\", this.state.gif.title);\r\n\r\n      console.log(data);\r\n      PostDataAuth(\"/gifs/\", data).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          console.log(responseJson.data);\r\n          this.props.onSave(this.state.gif);\r\n          this.setState({\r\n            gif: Object.assign({}, RESET_VALUES)\r\n          });\r\n          this.toggle();\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"All fields are required\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggle} className=\"btn btn-primary\">\r\n          {this.state.show ? \"Close Upload\" : \"Upload Image\"}\r\n        </button>\r\n        <div className=\"col-md-11 mt-3\">\r\n          {this.state.show && (\r\n            <form className=\"form-vertical col-md-8\">\r\n              <h3>Upload New Image</h3>\r\n              <div className=\"form-group\">\r\n                <label className=\"control-label\">Title</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  className=\"form-control\"\r\n                  onChange={this.handleChanges}\r\n                  value={this.state.gif.title}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Image</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-success\"\r\n                value=\"Upload\"\r\n                onClick={this.handleSave}\r\n              />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreateGif;\r\n","import React from \"react\";\r\n// import Filters from \"../admin/Filters\";\r\nimport store from \"store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Posts from \"./Posts\";\r\nimport { getData } from \"../../service\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport CreateGif from \"./CreateGif\";\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: \"\"\r\n    };\r\n\r\n    // this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleDestroy = this.handleDestroy.bind(this);\r\n    this.saveArticle = this.saveArticle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getData(\"/feed\").then(result => {\r\n      let responseJson = result;\r\n      if (responseJson.status === \"success\") {\r\n        //console.log(responseJson.data);\r\n        this.setState({ posts: responseJson.data });\r\n        //   this.setState({ redirectToReferrer: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveArticle(article) {\r\n    if (!article.id) {\r\n      article.id = new Date().getTime();\r\n      article.name = store.get(\"twk-userData\").name;\r\n    }\r\n    this.setState(prevState => {\r\n      let posts = prevState.posts;\r\n      posts[article.id] = article;\r\n      return { posts };\r\n    });\r\n  }\r\n  handleDestroy(postId) {\r\n    this.setState(prevState => {\r\n      let posts = prevState.posts;\r\n      delete posts[postId];\r\n      return { posts };\r\n    });\r\n  }\r\n  render() {\r\n    if (!store.get(\"twk-userData\")) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <div className=\"App container mt-5 mb-5\">\r\n        <div className=\"mt-5 mb-5\"></div>\r\n        <div className=\"container\">\r\n          <h1>Recent Posts</h1>\r\n\r\n          <CreatePost onSave={this.saveArticle}></CreatePost>\r\n\r\n          <CreateGif onSave={this.saveArticle}></CreateGif>\r\n\r\n          <Posts\r\n            posts={this.state.posts}\r\n            onDestroy={this.handleDestroy}\r\n          ></Posts>\r\n          {/* <ProductForm onSave={this.saveProduct}></ProductForm> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n"],"sourceRoot":""}