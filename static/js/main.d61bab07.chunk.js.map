{"version":3,"sources":["service.js","components/Login.js","components/Logout.js","App.js","serviceWorker.js","index.js"],"names":["PostData","type","userData","Promise","resolve","reject","fetch","method","body","JSON","stringify","mode","headers","then","response","json","res","catch","error","PostDataAuth","bearer","store","get","token","Authorization","Delete","getData","Login","props","state","email","password","login","bind","onChange","this","result","responseJson","status","set","data","role","history","push","alert","e","setState","target","name","value","to","className","placeholder","id","htmlFor","onClick","React","Component","Users","lazy","Feed","Articles","Gifs","App","logout","remove","window","location","reload","logoutBtn","fallback","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d61bab07.chunk.js","sourcesContent":["import store from \"store\";\r\n\r\nexport function PostData(type, userData) {\r\n  let BaseURL = \"https://api-dvc-teamwork.herokuapp.com/api/v1\";\r\n  //let BaseURL = 'http://localhost/PHP-Slim-Restful/api/';\r\n  return new Promise((resolve, reject) => {\r\n    fetch(BaseURL + type, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(userData),\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function PostDataAuth(type, userData) {\r\n  let BaseURL = \"https://api-dvc-teamwork.herokuapp.com/api/v1\";\r\n  const bearer = store.get(\"twk-userData\")\r\n    ? \"Bearer \" + store.get(\"twk-userData\").token\r\n    : \"\";\r\n  return new Promise((resolve, reject) => {\r\n    fetch(BaseURL + type, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(userData),\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: bearer,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function Delete(type) {\r\n  let BaseURL = \"https://api-dvc-teamwork.herokuapp.com/api/v1\";\r\n  const bearer = store.get(\"twk-userData\")\r\n    ? \"Bearer \" + store.get(\"twk-userData\").token\r\n    : \"\";\r\n  return new Promise((resolve, reject) => {\r\n    fetch(BaseURL + type, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: bearer,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function getData(type) {\r\n  let BaseURL = \"https://api-dvc-teamwork.herokuapp.com/api/v1\";\r\n  const bearer = store.get(\"twk-userData\")\r\n    ? \"Bearer \" + store.get(\"twk-userData\").token\r\n    : \"\";\r\n  //let BaseURL = 'http://localhost/PHP-Slim-Restful/api/';\r\n  return new Promise((resolve, reject) => {\r\n    fetch(BaseURL + type, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: bearer,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport { PostData } from \"../service\";\r\nimport store from \"store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n      // redirectToReferrer: false\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  login() {\r\n    if (this.state.email && this.state.password) {\r\n      PostData(\"/auth/signin\", this.state).then(result => {\r\n        let responseJson = result;\r\n        if (responseJson.status === \"success\") {\r\n          store.set(\"twk-userData\", responseJson.data);\r\n          if (responseJson.data.role === 1) {\r\n            this.props.history.push(\"/users\");\r\n          } else {\r\n            this.props.history.push(\"/feed\");\r\n          }\r\n          //   this.setState({ redirectToReferrer: true });\r\n        } else {\r\n          alert(responseJson.error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  render() {\r\n    if (store.get(\"twk-userData\") && store.get(\"twk-userData\").role === 1) {\r\n      return <Redirect to=\"/users\" />;\r\n    } else if (\r\n      store.get(\"twk-userData\") &&\r\n      store.get(\"twk-userData\").role === 2\r\n    ) {\r\n      return <Redirect to=\"/feed\" />;\r\n    }\r\n    return (\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n          <h3>Sign In</h3>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter email\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter password\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"customCheck1\"\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n            onClick={this.login}\r\n            className=\"btn btn-primary btn-block\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport store from \"store\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  logout() {\r\n    store.remove(\"twk-userData\");\r\n    this.props.history.push(\"/login\");\r\n  }\r\n\r\n  render() {\r\n    if (store.get(\"twk-userData\")) {\r\n      return (\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Logout\"\r\n          onClick={this.logout}\r\n          className=\"btn btn-danger\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport store from \"store\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nconst Users = lazy(() => import(\"./components/admin/Users\"));\r\nconst Feed = lazy(() => import(\"./components/employee/Feed\"));\r\nconst Articles = lazy(() => import(\"./components/employee/Articles\"));\r\nconst Gifs = lazy(() => import(\"./components/employee/Gifs\"));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  logout() {\r\n    store.remove(\"twk-userData\");\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    let logoutBtn;\r\n    if (store.get(\"twk-userData\")) {\r\n      logoutBtn = (\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Logout\"\r\n          onClick={this.logout}\r\n          className=\"btn btn-danger\"\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n              <div className=\"container\">\r\n                <Link to=\"/\">\r\n                  <div className=\"navbar-brand\">TeamWork</div>\r\n                </Link>\r\n\r\n                <div\r\n                  className=\"collapse navbar-collapse\"\r\n                  id=\"navbarTogglerDemo02\"\r\n                >\r\n                  <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/feed\">\r\n                        <div className=\"nav-link\" href=\"#\">\r\n                          Feed\r\n                        </div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/articles\">\r\n                        <div className=\"nav-link\" href=\"#\">\r\n                          Articles\r\n                        </div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/gifs\">\r\n                        <div className=\"nav-link\" href=\"#\">\r\n                          Gifs\r\n                        </div>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">{logoutBtn}</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route exact path=\"/users\" component={Users} />\r\n              <Route exact path=\"/feed\" component={Feed} />\r\n              <Route exact path=\"/articles\" component={Articles} />\r\n              <Route exact path=\"/gifs\" component={Gifs} />\r\n            </Switch>\r\n          </Suspense>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}